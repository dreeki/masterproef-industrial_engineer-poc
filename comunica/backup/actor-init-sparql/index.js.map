{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;;;AAAA,2CAAsC;AACtC,qDAAgD;AAChD,iDAAyD;AAAjD,oCAAA,SAAS,CAAA;AAAE,wCAAA,aAAa,CAAA;AAGhC,qDAAwE;AAExE;;;;GAIG;AACH,SAAgB,gBAAgB,CAAC,OAAuB;IACtD,OAAO,oCAAqB,CAAC,OAAO,IAAI,EAAE,EAAE,SAAS,EAAE,SAAS,GAAG,6BAA6B,CAAC,CAAC;AACpG,CAAC;AAFD,4CAEC","sourcesContent":["export * from './lib/ActorInitSparql';\nexport * from './lib/HttpServiceSparqlEndpoint';\nexport {newEngine, evaluateQuery} from './index-browser';\n\nimport {ActorInitSparql} from \"./lib/ActorInitSparql\";\nimport {IQueryOptions, newEngineDynamicArged} from \"./lib/QueryDynamic\";\n\n/**\n * Create a new dynamic comunica engine from a given config file.\n * @param {IQueryOptions} options Optional options on how to instantiate the query evaluator.\n * @return {Promise<QueryEngine>} A promise that resolves to a fully wired comunica engine.\n */\nexport function newEngineDynamic(options?: IQueryOptions): Promise<ActorInitSparql> {\n  return newEngineDynamicArged(options || {}, __dirname, __dirname + '/config/config-default.json');\n}\n"]}